import cv2
import numpy as np

# Load the image
image = cv2.imread("En_Poster_Analysis Guide.jpg")

# Convert the image to grayscale
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply adaptive thresholding to get a binary image
thresh = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 11, 2)

# Find contours in the binary image
contours, hierarchy = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Initialize variables to count bearings and store bounding boxes
num_bearings = 0
bounding_boxes = []

# Loop through the contours
for cnt in contours:
  # Calculate the area and perimeter of the contour
  area = cv2.contourArea(cnt)
  perimeter = cv2.arcLength(cnt, True)

  # Check if the contour is circular
  if cv2.isContourConvex(cnt) and (4 * np.pi * area / (perimeter * perimeter)) > 0.7:
    # Get the bounding box of the contour
    x, y, w, h = cv2.boundingRect(cnt)

    # Check if the bounding box is within the image dimensions
    if x >= 0 and y >= 0 and x + w < image.shape[1] and y + h < image.shape[0]:
      # Increment the number of bearings and store the bounding box
      num_bearings += 1
      bounding_boxes.append((x, y, w, h))

      # Draw the bounding box on the image
      cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)

# Print the number of bearings and display the image
print(f"Number of bearings: {num_bearings}")
cv2.imshow("Image", image)
cv2.waitKey(0)
