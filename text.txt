import cv2
import numpy as np

def rotate_point(point, center):
    """Rotate a point around a center by 90 degrees clockwise."""
    x, y = point
    cx, cy = center
    new_x = cx - (y - cy)
    new_y = cy + (x - cx)
    return [new_x, new_y]

def rotate_polygon(polygon, center):
    """Rotate a polygon around a center by 90 degrees clockwise."""
    return [rotate_point(point, center) for point in polygon]

def rotate_all_polygons(polygons, center):
    """Rotate all polygons in a list around a center by 90 degrees clockwise."""
    return [rotate_polygon(polygon["points"], center) for polygon in polygons]

def get_image_shapes_and_center(image_path):
    """Load an image, get its dimensions, and calculate its center."""
    image = cv2.imread(image_path)
    image_height, image_width, _ = image.shape
    image_center = [image_width / 2, image_height / 2]
    return image_height, image_width, image_center

# Example JSON data
json_data = {
    "shapes": [
        {
            "label": "nowear",
            "points": [
                [541.9259259259259, 2210.148148148148],
                [534.5185185185185, 2536.074074074074],
                # More points...
            ],
            # Other properties...
        },
        {
            "label": "nowear",
            "points": [
                [536.6521739130435, 1858.695652173913],
                [541.0, 2184.782608695652],
                # More points...
            ],
            # Other properties...
        },
        # More shapes...
    ]
}

# Path to the image
image_path = "path_to_your_image.jpg"

# Get image dimensions and center
image_height, image_width, image_center = get_image_shapes_and_center(image_path)

# Rotate all polygons in the JSON data
rotated_polygons = rotate_all_polygons(json_data["shapes"], image_center)

# Replace the original polygon points with the rotated ones
for i in range(len(json_data["shapes"])):
    json_data["shapes"][i]["points"] = rotated_polygons[i]

# Now json_data["shapes"] contains the rotated polygons
