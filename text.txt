import cv2
import numpy as np

# Load the image
image = cv2.imread('your_image_path.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply GaussianBlur to reduce noise and improve line detection
blur = cv2.GaussianBlur(gray, (5, 5), 0)

# Use the Canny edge detector to find edges in the image
edges = cv2.Canny(blur, 50, 150)

# Use the Hough Line Transform to detect lines
# Parameters: image, rho, theta, threshold
# rho is the resolution of the accumulator in pixels
# theta is the angle resolution of the accumulator in radians
# threshold is the minimum number of intersections to detect a line
lines = cv2.HoughLines(edges, 1, np.pi / 180, 100)

# Draw lines on the original image
for line in lines:
    rho, theta = line[0]
    a = np.cos(theta)
    b = np.sin(theta)
    x0 = a * rho
    y0 = b * rho
    x1 = int(x0 + 1000 * (-b))
    y1 = int(y0 + 1000 * (a))
    x2 = int(x0 - 1000 * (-b))
    y2 = int(y0 - 1000 * (a))
    cv2.line(image, (x1, y1), (x2, y2), (0, 0, 255), 2)

# Display the result
cv2.imshow('Detected Lines', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
