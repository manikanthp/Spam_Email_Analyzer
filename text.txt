import json
import numpy as np

def rotate_point(point, center, angle):
    """Rotate a point around a center by a given angle."""
    angle_rad = np.deg2rad(angle)
    x, y = point
    cx, cy = center
    new_x = np.cos(angle_rad) * (x - cx) - np.sin(angle_rad) * (y - cy) + cx
    new_y = np.sin(angle_rad) * (x - cx) + np.cos(angle_rad) * (y - cy) + cy
    return new_x, new_y

def rotate_polygon(polygon, center, angle):
    """Rotate a polygon around a center by a given angle."""
    return [rotate_point(point, center, angle) for point in polygon]

def rotate_json_data(json_data, image_width, image_height, angle):
    """Rotate JSON labeled data for an image."""
    # Calculate the center of the image
    center = (image_width / 2, image_height / 2)
    
    # Rotate each polygon in the JSON data
    for label, polygons in json_data.items():
        for i, polygon in enumerate(polygons):
            # Adjust polygon points to be relative to the center
            relative_polygon = [(x - center[0], y - center[1]) for x, y in polygon]
            # Rotate the polygon
            rotated_polygon = rotate_polygon(relative_polygon, (0, 0), angle)
            # Convert rotated polygon points to absolute coordinates
            rotated_polygon = [(x + center[0], y + center[1]) for x, y in rotated_polygon]
            # Update the JSON data with the rotated polygon
            json_data[label][i] = rotated_polygon

    return json_data

# Example usage
json_data = {
    "object1": [
        [(100, 100), (200, 100), (200, 200), (100, 200)],
        [(300, 300), (400, 300), (400, 400), (300, 400)]
    ],
    "object2": [
        [(500, 500), (600, 500), (600, 600), (500, 600)]
    ]
}

image_width = 800
image_height = 600
rotation_angle = 90  # Clockwise rotation

rotated_json_data = rotate_json_data(json_data, image_width, image_height, rotation_angle)
print(json.dumps(rotated_json_data, indent=2))
